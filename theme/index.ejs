<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title>测试题</title>
    <script type="text/javascript" src="/jquery-3.2.1.min.js"></script>
    <script type="text/javascript">
    </script>
    <style type="text/css">
    div#image {
        padding: 100px;
        // text-align: center;
    }
    
    div#image img {
        max-width: 100%;
        vertical-align: bottom;
        -webkit-user-select: none;
        -moz-user-select: none;
        -khtml-user-select: none;
        -ms-user-select: none;
        -o-user-select: none;
        user-select: none;
    }
    
    div#show {
        border: 1px solid #000;
        position: absolute;
        top: 0;
        left: 0;
        width: 0;
        height: 0;
        display: none;
    }
    </style>
</head>

<body>
    <input id="choose" type="file" onchange="selectImage(this);" />
    <div id="draw">
    </div>
    <br/>
    <div id="image">
        <img src="" />
    </div>
    <div id="mode" style="display: none;">
        <select id="Property">
            <option selected value="1">模式一</option>
            <option value="2">模式二</option>
        </select>
        <button id="restart">重画矩形</button>
        <div id="mode1" class="mode">
            <label>选择矩形填充的颜色：
                <select id="color">
                </select>
            </label>
            <button id="fill">填充颜色</button>
        </div>
        <div id="mode2" class="mode" style="display: none;">
            <label>开始时缩放系数：
                <input type="number" id="StartScale" value="0.2" />
            </label>
            <label>结束时缩放系数：
                <input type="number" id="EndScale" value="1.2" />
            </label>
            <label>动画效果持续时间：
                <input type="number" id="AnimationTime" value="3000" />
            </label>
            <button id="run">开始动画</button>
        </div>
        <button id="post">提交数据</button>
    </div>
    <div id="show"></div>
    <script type="text/javascript">
    var path = '', x, y, x1, y1, x2, y2, w, h, run = false,
        draw = false,
        mode = false,
        color = [{
            name: '红色',
            value: 'red'
        }, {
            name: '绿色',
            value: 'green'
        }, {
            name: '蓝色',
            value: 'blue'
        }];
    for (var i in color) {
        var option = $('<option />').text(color[i].name).val(parseInt(i) + 1);
        if (i == 0) option.attr('selected', true);
        $('#color').append(option);
    }

    function selectImage(file) {
        if (file.files && file.files[0]) {
			console.log(file.files[0]);
            $('#mode').hide();
            $('#show').hide().css({
                width: 0,
                height: 0
            });
			mode = false;
			var paths = file.value.split('\\');
			for(var p = 0; p <= paths.length - 2; p++) {
				path += paths[p] + '\\';
			}
            var reader = new FileReader();
            reader.onload = function(evt) {
                $('div#image img').attr('src', evt.target.result);
                $(document).mousedown(function(e) {
                    if (e.button === 0 && !mode) {
                        x1 = e.clientX - $(this).find('img').offset().left;
                        y1 = e.clientY - $(this).find('img').offset().top + $(document).scrollTop();
                        x = e.clientX;
                        y = e.clientY + $(document).scrollTop();
                        $('#show').show().css({
                            'top': y,
                            'left': x
                        });
                        console.log(e.clientX, '-', y1);
                        draw = true;
                    }
                });
                $(document).mousemove(function(e) {
                    if (draw && !mode) {
                        x2 = e.clientX - $(this).find('img').offset().left;
                        y2 = e.clientY - $(this).find('img').offset().top + $(document).scrollTop();
                        w = e.clientX - $('#show').offset().left;
                        h = e.clientY - $('#show').offset().top + $(document).scrollTop()
                        $('#show').show().css({
                            'width': w,
                            'height': h
                        });
                        // console.log(x2, '-', y2);
                    }
                });
                $(document).mouseup(function(e) {
                    if (!mode) {
                        draw = false;
                        mode = true;
                        $('#mode').show();
                    }
                });
                $('#Property').change(function() {
                    $('.mode').hide();
                    run = false;
                    $('#show').stop().css({
                        background: '',
                        left: x,
                        top: y,
                        width: w,
                        height: h
                    });
                    $('#mode' + $(this).val()).show();
                });
                $('#fill').click(function() {
                    $('#show').css('background', color[$('#color').val() - 1].value);
                    console.log($('#color').val() - 1, color[$('#color').val() - 1].value);
                });
                $('#run').click(function() {
                    run = true;
                    runTime();
                });
                $('#restart').click(function() {
                    mode = false;
                    $('#mode').hide();
                });

                $('#post').click(function() {
                    var self = $(this);
                    var data = {
						ImageDirectory: path,
                        ImageName: file.files[0].name,
                        X1: x1,
                        Y1: y1,
                        X2: x2,
                        Y2: y2,
                        W: w,
                        H: h,
                        Property: $('#Property').val()
                    };
                    if ($('#Property').val() == 1) {
                        data.color = $('#color').val();
                    } else if ($('#Property').val() == 2) {
                        data.StartScale = $('#StartScale').val();
                        data.EndScale = $('#EndScale').val();
                        data.AnimationTime = $('#AnimationTime').val()
                    }
                    $.ajax({
                        type: 'post',
                        url: '/post',
                        data: data,
                        dataType: 'json',
                        beforeSend: function() {
                            self.attr('disabled', true);
							console.log(data);
                        },
                        success: function(msg) {
                            self.attr('disabled', false);
							console.log(msg);
                            self.after($('<a />').attr('href', '/download/' + msg._id).attr('target', '_blank').text('将数据保存到本地'));
                        }
                    });
                });

                function runTime() {
                    if (run) {
                        $('#show').css({
                            left: x + w * ((1 - $('#StartScale').val()) / 2),
                            top: y + h * ((1 - $('#StartScale').val()) / 2),
                            width: w * $('#StartScale').val(),
                            height: h * $('#StartScale').val()
                        }).animate({
                            left: x + w * ((1 - $('#EndScale').val()) / 2),
                            top: y + h * ((1 - $('#EndScale').val()) / 2),
                            width: w * $('#EndScale').val(),
                            height: h * $('#EndScale').val()
                        }, parseInt($('#AnimationTime').val()), function() {
                            runTime();
                        });
                        // console.log(typeof parseInt($('#AnimationTime').val()));
                    }
                }

            }
            reader.readAsDataURL(file.files[0]);
        }
    }
    </script>
</body>

</html>